CREATE DATABASE opilaneOdinokov;
USE opilaneOdinokov;

-- Table Isik
CREATE TABLE Isik (
    id int PRIMARY KEY,
    eesnimi VARCHAR(50),
    perenimi VARCHAR(50),
    sugu CHAR(1),
    sünnikuupäev DATE,
    aadress VARCHAR(100),
    email VARCHAR(50)
);

-- Table Õppeaine
CREATE TABLE Õppeaine (
    id int PRIMARY KEY,
    nimetus VARCHAR(50),
    vastutav_õpetaja VARCHAR(50),
    aine_kestus VARCHAR(50)
);

-- Table Õppimine
CREATE TABLE Õppimine (
    id int PRIMARY KEY,
    isik_id INTEGER REFERENCES Isik(id),
    õppeaine_id INTEGER REFERENCES Õppeaine(id),
    hinne INTEGER
);
--logi table
CREATE TABLE logi (
    id INT IDENTITY(1,1) PRIMARY KEY,
    kasutaja NVARCHAR(50),
    kuupäev DATETIME DEFAULT GETDATE(),
    sisestatudAndmed NVARCHAR(MAX)
);


--trigerid uuendaime ja lisamine
--triger uuendamine
CREATE TRIGGER ÕppimineUuendamine
ON Õppimine
FOR UPDATE
AS
BEGIN
    INSERT INTO logi (kasutaja, kuupäev, sisestatudAndmed)
    SELECT SYSTEM_USER,
           GETDATE(),
           CONCAT('Vanad: IsikID: ', deleted.isik_id, ', ÕppeaineID: ', deleted.õppeaine_id, ', Hinne: ', deleted.hinne, 
                  ' Uued: IsikID: ', inserted.isik_id, ', ÕppeaineID: ', inserted.õppeaine_id, ', Hinne: ', inserted.hinne)
    FROM deleted 
    INNER JOIN inserted ON deleted.id = inserted.id;
END;

--trige lisamine
CREATE TRIGGER ÕppimineLisamine
ON Õppimine
FOR INSERT
AS
BEGIN
    INSERT INTO logi (kasutaja, kuupäev, sisestatudAndmed)
    SELECT SYSTEM_USER,
           GETDATE(),
           CONCAT('Õppimine on lisatud: IsikID: ', inserted.isik_id, ', ÕppeaineID: ', inserted.õppeaine_id, ', Hinne: ', inserted.hinne)
    FROM inserted;
END;

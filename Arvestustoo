CREATE DATABASE opilaneOdinokov;
USE opilaneOdinokov;

-- Table Isik
CREATE TABLE Isik (
    id int PRIMARY KEY,
    eesnimi VARCHAR(50),
    perenimi VARCHAR(50),
    sugu CHAR(1),
    sünnikuupäev DATE,
    aadress VARCHAR(100),
    email VARCHAR(50)
);

-- Table Õppeaine
CREATE TABLE Õppeaine (
    id int PRIMARY KEY,
    nimetus VARCHAR(50),
    vastutav_õpetaja integer,
    aine_kestus VARCHAR(50)
);
drop  table   Õppeaine

-- Table Õppimine
CREATE TABLE Õppimine (
    id int PRIMARY KEY,
    isik_id INTEGER REFERENCES Isik(id),
    õppeaine_id INTEGER REFERENCES Õppeaine(id),
    hinne INTEGER
);
--logi table
CREATE TABLE logi (
    id INT IDENTITY(1,1) PRIMARY KEY,
    kasutaja NVARCHAR(50),
    kuupäev DATETIME DEFAULT GETDATE(),
    sisestatudAndmed NVARCHAR(MAX)
);


--trigerid uuendaime ja lisamine
--triger uuendamine
CREATE TRIGGER ÕppimineUuendamine
ON Õppimine
FOR UPDATE
AS
BEGIN
    INSERT INTO logi (kasutaja, kuupäev, sisestatudAndmed)
    SELECT SYSTEM_USER,
           GETDATE(),
           CONCAT('Vanad: IsikID: ', deleted.isik_id, ', ÕppeaineID: ', deleted.õppeaine_id, ', Hinne: ', deleted.hinne, 
                  ' Uued: IsikID: ', inserted.isik_id, ', ÕppeaineID: ', inserted.õppeaine_id, ', Hinne: ', inserted.hinne)
    FROM deleted 
    INNER JOIN inserted ON deleted.id = inserted.id;
END;

--trige lisamine
CREATE TRIGGER ÕppimineLisamine
ON Õppimine
FOR INSERT
AS
BEGIN
    INSERT INTO logi (kasutaja, kuupäev, sisestatudAndmed)
    SELECT SYSTEM_USER,
           GETDATE(),
           CONCAT('Õppimine on lisatud: IsikID: ', inserted.isik_id, ', ÕppeaineID: ', inserted.õppeaine_id, ', Hinne: ', inserted.hinne)
    FROM inserted;
END;


--kasutaja ei saa tabeli struuktur muuta nuing andmed tabelist kustudtad
DENY INSERT ON Isik  TO opilaneMichael;
DENY DELETE ON Isik TO opilaneMichael;
DENY INSERT ON logi TO opilaneMichael;
DENY DELETE ON  logi TO opilaneMichael;
DENY INSERT ON Õppeaine  TO opilaneMichael;
DENY DELETE ON Õppeaine TO opilaneMichael;




INSERT INTO Isik (eesnimi, perenimi, sugu, sünnikuupäev, aadress, email) 
VALUES ('Kati', 'Kask', 'N', '1988-02-10', 'Tartu, Eesti', 'kati.kask@example.com');

INSERT INTO Isik (eesnimi, perenimi, sugu, sünnikuupäev, aadress, email) 
VALUES ('Mihkel', 'Mets', 'M', '1992-09-25', 'Viljandi, Eesti', 'mihkel.mets@example.com');

INSERT INTO Isik (eesnimi, perenimi, sugu, sünnikuupäev, aadress, email) 
VALUES ('Laura', 'Lepp', 'N', '1995-07-18', 'Rakvere, Eesti', 'laura.lepp@example.com');


Select * from Isik
Select * from Õppeaine
Select * from Õppimine

--foreign key Õppimine --> Isik
ALTER TABLE Õppimine ADD FOREIGN KEY (isik_id) REFERENCES Isik(id);

--foreign key Õppimine --> Õppeaine
ALTER TABLE Õppimine ADD FOREIGN KEY (õppeaine_id) REFERENCES Õppeaine(id);

--foreign key Õppeaine--> Isik
ALTER TABLE Õppeaine ADD FOREIGN KEY (vastutav_õpetaja) REFERENCES Isik(id);
